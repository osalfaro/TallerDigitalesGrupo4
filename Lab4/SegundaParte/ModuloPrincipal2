module ModuloPrincipal2(
/*  CLK es el clock de la FPGA de 100MHz
    pushIn es el boton para cambiar de estado manualmente
    enable es el switch para que funcione la maquina
    modo es un switch para elegir si funciona de modo automatico o manual   */
input logic CLK, pushIn, enable, modo, reset,
input logic [3:0] opcion,
output logic [7:0] anodos, //controlan lo que se muestra en el display
output logic Led1,Led2,Led3,Led4, LedAviso,
output logic a,b,c,d,e,f,g
    );
    
    logic pushOut; //salida del antirrebote
    logic CLK1; //clock para el modo manual, 10kHz
    logic CLK2; //clock de baja frecuencia para la maquina de estados en modo automatico
    logic CLKmaquina; //clock que entra al clock de la maquina de estados
    logic entradaMaquina; //entrada de la maquina
    logic [1:0] salidaMaquina; //salida de la maquina
    
    
    //instanciando divisores de frecuencia
    DivisorFrecuencia1 divisorManual(CLK,CLK1);
    DivisorFrecuencia2 divisorAuto(CLK,CLK2);
    
    //instanciando antirrebote
    FF_D antirrebote(CLK1, 1'b0, pushIn,pushOut);
        
    //mux que selecciona el clock
    Mux2a1 mux1(CLK1,CLK2,modo,CLKmaquina);
    //Mux que selecciona la entrada
    Mux2a1 mux2(pushOut,1'b1,modo,entradaMaquina);
    
    //instanciando maquina de estados
    MaquinaDeEstados maq(entradaMaquina,reset,CLKmaquina,salidaMaquina);
    
    //Instanciando Tabla con los operandos a escoger
    logic [31:0] A;
    logic [31:0] B;
    TablaPuntoFlotante tabla(opcion,A,B); //

    //conexiones necesarias para el sumador
    
    logic [31:0] Resultado;
    logic signo;
    logic [7:0] expA, expB;
    logic [23:0] mantA, mantB;
    logic [7:0] desplazamiento, expMayor;
    logic expMenor;
    logic [23:0] mantDesplazada, mantNoDesplazada;
    logic [24:0] suma;
    assign signo = A[31];
    assign expA = A[30:23];
    assign expB = B[30:23];
    assign mantA = {1'b1,A[22:0]};
    assign mantB = {1'b1,B[22:0]};
    
    //contador para encender bits
    logic [2:0] contador;
    assign contador = 3'b000;
    //variables para el display
    logic [3:0]digito1, digito2, digito3, digito4, digito5, digito6, digito7, digito8;
    
     //instanciando etapas del sumador 
    
  comparacionExponentes comparacion(expA,expB,contador,desplazamiento,expMayor, expMenor);
  DesplazamientoMantisa despMantisas(desplazamiento,expMenor,mantA,mantB,mantDesplazada,mantNoDesplazada,contador);
  SumaMantisas sumaMant(mantNoDesplazada,mantDesplazada,suma,contador);
  NormaYEnsamble norm(signo,suma,expMayor,Resultado,contador);
  
    //aumentando contador y haciendo uso de m√°quina de estados
  
  always_comb
    case(salidaMaquina)
        2'b00:
            begin
            if (contador == 3'b001)
                begin 
                
                digito1 = 4'b0000;
                digito2 = 4'b0000;
                digito3 = 4'b0000;
                digito4 = 4'b0000;
                digito5 = 4'b0000;
                digito6 = 4'b0000;
                digito7 = 4'b0000;
                digito8 = 4'b0000;
               
                Led1 = 1;
                Led2 = 0;
                Led3 = 0;
                Led4 = 0;
                end
             end
        2'b01: 
           begin
            if (contador == 3'b010)
              begin
                
                digito1 = 4'b0000;
                digito2 = 4'b0000;
                digito3 = 4'b0000;
                digito4 = 4'b0000;
                digito5 = 4'b0000;
                digito6 = 4'b0000;
                digito7 = 4'b0000;
                digito8 = 4'b0000;
                Led1 = 1;
                Led2 = 1;
                Led3 = 0;
                Led4 = 0;
              end
            end
        2'b10:
            begin
            if (contador == 3'b011)
                begin
                
                digito1 = 4'b0000;
                digito2 = 4'b0000;
                digito3 = 4'b0000;
                digito4 = 4'b0000;
                digito5 = 4'b0000;
                digito6 = 4'b0000;
                digito7 = 4'b0000;
                digito8 = 4'b0000;
                Led1 = 1; 
                Led2 = 1;
                Led3 = 1;
                Led4 = 0;
                end
            end
        2'b11:
           begin
           if (contador == 3'b100)
              begin
              
              Led1 = 1;
              Led2 = 1;
              Led3 = 1;
              Led4 = 1;
              
              digito1 = Resultado[3:0];
              digito2 = Resultado[7:4];
              digito3 = Resultado[11:8];
              digito4 = Resultado[15:12];
              digito5 = Resultado[19:16];
              digito6 = Resultado[23:20];
              digito7 = Resultado[27:24];
              digito8 = Resultado[31:28];
                                  

              end
           end
        endcase
        
           ControlDisplays Disp(CLK,digito1, digito2, digito3, digito4, digito5, 
          digito6, digito7, digito8,anodos,a,b,c,d,e,f,g);

endmodule
