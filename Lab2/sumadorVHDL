--Sumador de 1 bit.

entity SumadorC1Bit is  --Se define la estructura del sumador de 1 bit.
port(a,b,cin:in STD_LOGIC;  --Entradas del sumador
        cout, d: out STD_LOGIC); --Salidas del sumador
end;

architecture Structural of SumadorC1Bit is

begin
process(all)
    begin
    cout <= (a and b) or (cin and (a xor b)); --Ecuacion logica para el acarreo de salida del sumador
    d <= cin xor (a xor b); --Ecuacion logica para el bit de salida del sumador


end process;
end Structural;


--Sumador Completo 4 bits
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity SumadorC4Bits is
    port(
        A,B: in STD_LOGIC_VECTOR (3 downto 0);
        Ci:in STD_LOGIC;
        D:out STD_LOGIC_VECTOR (3 downto 0);
        Co:out STD_LOGIC);
        
end SumadorC4Bits;

architecture Structural of SumadorC4Bits is

component SumadorC1Bit is
    port(a,b,cin:in STD_LOGIC;
        cout, d: out STD_LOGIC);
end component;

signal C: STD_LOGIC_VECTOR (3 downto 0);

begin
Sumador1 : SumadorC1Bit port map (A(0), B(0), Ci, C(1), D(0));
Sumador2 : SumadorC1Bit port map (A(1), B(1), C(1), C(2), D(1));
Sumador3 : SumadorC1Bit port map (A(2), B(2), C(2), C(3), D(2));
Sumador4 : SumadorC1Bit port map (A(3), B(3), C(3), Co, D(3));

end Structural;
