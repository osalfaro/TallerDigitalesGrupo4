module principal(
    input logic clk,
    input logic [1:0] cuadrante,
    output logic Hsync,
    output logic Vsync,
    output logic [3:0] Red,
    output logic [3:0] Green,
    output logic [3:0] Blue 
    );
    
    wire clk25Mhz;
    wire enableVcounter;
    wire [15:0] contadorHorizontal;
    wire [15:0] contadorVertical;
    
    DivisorFrecuencia divisor(clk,clk25Mhz); //Instanciar
    contadorHorizontal horizontal(clk25Mhz,enableVcounter,contadorHorizontal);
    contadorVertical vertical(clk25Mhz,enableVcounter,contadorVertical);
    
    //salidas
    assign Hsync = (contadorHorizontal<96) ? 1:0;
    assign Vsync = (contadorVertical<2) ? 1:0;
    
    //Colores
    logic [3:0] color =4'hF;
    
    always_comb
    begin
    case(cuadrante)
        2'b00:
            begin
            Red = (contadorHorizontal <465 && contadorHorizontal >143 && contadorVertical <276 && contadorVertical >34) ? color:0;
            Green = (contadorHorizontal <465 && contadorHorizontal >143 && contadorVertical <276 && contadorVertical >34) ? color:0;
            Blue = (contadorHorizontal <465 && contadorHorizontal >143 && contadorVertical <276 && contadorVertical >34) ? color:0;   
            end
        2'b01:
            begin
            Red = (contadorHorizontal <784 && contadorHorizontal >464 && contadorVertical <276 && contadorVertical >34) ? color:0;
            Green = (contadorHorizontal <784 && contadorHorizontal >464 && contadorVertical <276 && contadorVertical >34) ? color:0;
            Blue = (contadorHorizontal <784 && contadorHorizontal >464 && contadorVertical <276 && contadorVertical >34) ? color:0;   
            end
        2'b10:
            begin
            Red = (contadorHorizontal <465 && contadorHorizontal >143 && contadorVertical <514 && contadorVertical >276) ? color:0;
            Green = (contadorHorizontal <465 && contadorHorizontal >143 && contadorVertical <514 && contadorVertical >276) ? color:0;
            Blue = (contadorHorizontal <465 && contadorHorizontal >143 && contadorVertical <514 && contadorVertical >276) ? color:0;   
            end
        2'b11:
            begin
            Red = (contadorHorizontal <784 && contadorHorizontal >464 && contadorVertical <514 && contadorVertical >276) ? color:0;
            Green = (contadorHorizontal <784 && contadorHorizontal >464 && contadorVertical <514 && contadorVertical >276) ? color:0;
            Blue = (contadorHorizontal <784 && contadorHorizontal >464 && contadorVertical <514 && contadorVertical >276) ? color:0;  
            end
    
    //assign Red = (contadorHorizontal <784 && contadorHorizontal >143 && contadorVertical <515 && contadorVertical >34) ? 4'hF:0;
    //assign Green = (contadorHorizontal <784 && contadorHorizontal >143 && contadorVertical <515 && contadorVertical >34) ? 4'hF:0;
    //assign Blue = (contadorHorizontal <784 && contadorHorizontal >143 && contadorVertical <515 && contadorVertical >34) ? 4'hF:0;
    endcase
    end
endmodule
